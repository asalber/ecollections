Prefix(:=<http://purl.org/ceu/lco#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://purl.org/ceu/eco>
<http://purl.org/ceu/eco/1.0>
Annotation(dc:rights "La ontología E-Collections está bajo una licencia de Creative Commons Reconocimiento-CompartirIgual 4.0 Internacional ( http://creativecommons.org/licenses/by-sa/4.0/)."@es)
Annotation(rdfs:comment "La ontología E-Collections define una clasificación taxonómica de distintos tipos de colecciones de acuerdo a las características de homogeneidad, unicidad, orden y cardinalidad."@es)
Annotation(dc:creator "Alfredo Sánchez Alberca (asalber@ceu.es) <http://aprendeconalf.es/foaf.rdf>"@es)
Annotation(rdfs:label "E-Collections Ontology"@en)
Annotation(dc:rights "E-Collections ontology is released under Attribution-ShareAlike 4.0 International Creative Commons license: http://creativecommons.org/licenses/by-sa/4.0/"@en)
Annotation(rdfs:label "Ontología E-Collections"@es)
Annotation(rdfs:comment "The E-Collections ontology defines a collections taxonomy for different collection types based on the structural properties of homogeneity, uniqueness, order and cardinality."@en)

Declaration(Class(<http://purl.org/ceu/eco#Heterocombination>))
Declaration(Class(<http://purl.org/ceu/eco#Heteroranking>))
Declaration(Class(<http://purl.org/ceu/eco#Heterovariation>))
Declaration(Class(<http://purl.org/ceu/eco#HomogeneousCollection>))
Declaration(Class(<http://purl.org/ceu/eco#Ranking>))
Declaration(Class(<http://purl.org/ceu/eco#Variation>))
Declaration(Class(:Box))
Declaration(Class(:Collection))
Declaration(Class(:Combination))
Declaration(Class(:Element))
Declaration(Class(:FixedCardinalityCollection))
Declaration(Class(:Heteroset))
Declaration(Class(:Item))
Declaration(Class(:List))
Declaration(Class(:Multicombination))
Declaration(Class(:Multiheteroset))
Declaration(Class(:Multiset))
Declaration(Class(:OrderedCollection))
Declaration(Class(:OrderedItem))
Declaration(Class(:Sequence))
Declaration(Class(:Set))
Declaration(Class(:Tuple))
Declaration(Class(:UniquenessCollection))
Declaration(Class(:Vector))
Declaration(ObjectProperty(:hasContent))
Declaration(ObjectProperty(:hasElement))
Declaration(ObjectProperty(:hasFirstItem))
Declaration(ObjectProperty(:hasItem))
Declaration(ObjectProperty(:hasLastItem))
Declaration(ObjectProperty(:hasNextItem))
Declaration(ObjectProperty(:hasOrderedItem))
Declaration(ObjectProperty(:hasPreviousItem))
Declaration(ObjectProperty(:isElementOf))
Declaration(ObjectProperty(:isFollowedBy))
Declaration(ObjectProperty(:isPrecededBy))
Declaration(DataProperty(:hasCardinality))
Declaration(DataProperty(:hasIndex))
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Heterocombination> "Heterocombination"@en)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Heterocombination> "Una heterocombinación es una colección heterogénea, con unicidad, no ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Heterocombination> "An heterocombination is an heterogeneous, with uniqueness, non ordered and with fixed cardinality collection."@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Heterocombination> "Heterocombinación"@es)
SubClassOf(<http://purl.org/ceu/eco#Heterocombination> :Box)
SubClassOf(<http://purl.org/ceu/eco#Heterocombination> :Heteroset)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Heteroranking> "An heteroranking is an heterogeneous, with uniqueness, ordered and with variable cardinality collection."@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Heteroranking> "Heteroranking"@en)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Heteroranking> "Un heteroranking es una colección heterogénea, con unicidad, ordenada y de cardinalidad variable."@es)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Heteroranking> "Heteroranking"@es)
SubClassOf(<http://purl.org/ceu/eco#Heteroranking> :Heteroset)
SubClassOf(<http://purl.org/ceu/eco#Heteroranking> :List)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Heterovariation> "An heterovariation is an heterogeneous, with uniqueness, ordered and with fixed cardinality collection."@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Heterovariation> "Heterovariation"@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Heterovariation> "Heterovariación"@es)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Heterovariation> "Una heterovariación es una colección heterogénea, con unicidad, ordenada y de cardinalidad fija."@es)
SubClassOf(<http://purl.org/ceu/eco#Heterovariation> <http://purl.org/ceu/eco#Heterocombination>)
SubClassOf(<http://purl.org/ceu/eco#Heterovariation> <http://purl.org/ceu/eco#Heteroranking>)
SubClassOf(<http://purl.org/ceu/eco#Heterovariation> :Tuple)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#HomogeneousCollection> "Colección homogénea"@es)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#HomogeneousCollection> "Una coleccion homogénea es una colección donde todos los elementos son del mismo tipo."@es)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#HomogeneousCollection> "Homogeneous collection"@en)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#HomogeneousCollection> "An homogeneous collection is a collection with all its element of the same type."@en)
SubClassOf(<http://purl.org/ceu/eco#HomogeneousCollection> :Collection)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Ranking> "Ranking"@en)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Ranking> "Un ranking es una colección homogénea, con unicidad, ordenada y de cardinalidad variable."@es)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Ranking> "A ranking is an homogeneous, with uniqueness, ordered and with variable cardinality collection."@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Ranking> "Ranking"@es)
SubClassOf(<http://purl.org/ceu/eco#Ranking> <http://purl.org/ceu/eco#Heteroranking>)
SubClassOf(<http://purl.org/ceu/eco#Ranking> :Sequence)
SubClassOf(<http://purl.org/ceu/eco#Ranking> :Set)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Variation> "Una variación es una colección homogénea, con unicidad, ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:comment <http://purl.org/ceu/eco#Variation> "A variation is an homogeneous, with uniqueness, ordered and with fixed cardinality collection."@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Variation> "Variation"@en)
AnnotationAssertion(rdfs:label <http://purl.org/ceu/eco#Variation> "Variación"@es)
SubClassOf(<http://purl.org/ceu/eco#Variation> <http://purl.org/ceu/eco#Heterovariation>)
SubClassOf(<http://purl.org/ceu/eco#Variation> <http://purl.org/ceu/eco#Ranking>)
SubClassOf(<http://purl.org/ceu/eco#Variation> :Combination)
SubClassOf(<http://purl.org/ceu/eco#Variation> :Vector)
AnnotationAssertion(rdfs:label :Box "Box"@en)
AnnotationAssertion(rdfs:label :Box "Caja"@es)
AnnotationAssertion(rdfs:comment :Box "Una caja es una colección heterogénea, sin unicidad, no ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:comment :Box "A box is an heterogeneous, without uniqueness, non ordered and with fixed cardinality collection."@en)
SubClassOf(:Box :FixedCardinalityCollection)
SubClassOf(:Box :Multiheteroset)
AnnotationAssertion(rdfs:comment :Collection "A collection is a group of objects or elements."@en)
AnnotationAssertion(rdfs:comment :Collection "Una colección es una agrupación de objetos o elementos."@es)
AnnotationAssertion(rdfs:label :Collection "Colección"@es)
AnnotationAssertion(rdfs:label :Collection "Collection"@en)
DisjointClasses(:Collection :Item)
AnnotationAssertion(rdfs:label :Combination "Combination"@en)
AnnotationAssertion(rdfs:comment :Combination "Una combinación es una colección homogénea, con unicidad, no ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:label :Combination "Combinación"@es)
AnnotationAssertion(rdfs:comment :Combination "A combination is an homogeneous, with uniqueness, non ordered and with fixed cardinality collection."@en)
SubClassOf(:Combination <http://purl.org/ceu/eco#Heterocombination>)
SubClassOf(:Combination :Multicombination)
SubClassOf(:Combination :Set)
AnnotationAssertion(rdfs:label :FixedCardinalityCollection "Fixed cardinality collection"@en)
AnnotationAssertion(rdfs:comment :FixedCardinalityCollection "Una colección de cardinalidad fija es una colección con un número fijo de elementos."@es)
AnnotationAssertion(rdfs:comment :FixedCardinalityCollection "A fixed cardiality collection is a collection of a fixed number of elements."@en)
AnnotationAssertion(rdfs:label :FixedCardinalityCollection "Colección de cardinalidad fija"@es)
SubClassOf(:FixedCardinalityCollection :Collection)
AnnotationAssertion(rdfs:label :Heteroset "Heteroconjunto"@es)
AnnotationAssertion(rdfs:comment :Heteroset "A heteroset is an heterogeneous, with uniqueness, non ordered and with variable cardinality collection."@en)
AnnotationAssertion(rdfs:comment :Heteroset "Un heteroconjunto es una colección heterogénea, con unicidad, no ordenada y de cardinalidad variable."@es)
AnnotationAssertion(rdfs:label :Heteroset "Heteroset"@en)
SubClassOf(:Heteroset :Multiheteroset)
SubClassOf(:Heteroset :UniquenessCollection)
SubClassOf(:Item ObjectSomeValuesFrom(ObjectInverseOf(:hasItem) :Collection))
AnnotationAssertion(rdfs:label :List "List"@en)
AnnotationAssertion(rdfs:label :List "Lista"@es)
AnnotationAssertion(rdfs:comment :List "Una lista es una colección heterogénea, sin unicidad, ordenada y de cardinalidad variable."@es)
AnnotationAssertion(rdfs:comment :List "A list is an heterogeneous, without uniqueness, ordered and with variable cardinality collection."@en)
SubClassOf(:List :Multiheteroset)
SubClassOf(:List :OrderedCollection)
AnnotationAssertion(rdfs:comment :Multicombination "A multicombination is an homogeneous, without uniqueness, non ordered and with fixed cardinality collection."@en)
AnnotationAssertion(rdfs:label :Multicombination "Multicombinación"@es)
AnnotationAssertion(rdfs:label :Multicombination "Multicombination"@en)
AnnotationAssertion(rdfs:comment :Multicombination "Una multicombinación es una colección homogénea, sin unicidad, no ordenada y de cardinalidad fija."@es)
SubClassOf(:Multicombination :Box)
SubClassOf(:Multicombination :Multiset)
AnnotationAssertion(rdfs:comment :Multiheteroset "A multiheteroset is an heterogeneous, without uniqueness, non ordered and with variable cardinality collection."@en)
AnnotationAssertion(rdfs:label :Multiheteroset "Multiheteroconjunto"@es)
AnnotationAssertion(rdfs:label :Multiheteroset "Multiheteroset"@en)
AnnotationAssertion(rdfs:comment :Multiheteroset "Un multiheteroconjunto es una colección heterogénea, sin unicidad, no ordenada y de cardilnalidad variable."@es)
SubClassOf(:Multiheteroset :Collection)
AnnotationAssertion(rdfs:label :Multiset "Multiset"@en)
AnnotationAssertion(rdfs:label :Multiset "Multiconjunto"@es)
AnnotationAssertion(rdfs:comment :Multiset "Un multiconjunto es una colección homogenea, sin unicidad, no ordenada y de cardinalidad variable."@es)
AnnotationAssertion(rdfs:comment :Multiset "A multiset is an homogeneous, without uniqueness, non ordered and with variable cardinality collection."@en)
SubClassOf(:Multiset <http://purl.org/ceu/eco#HomogeneousCollection>)
SubClassOf(:Multiset :Multiheteroset)
AnnotationAssertion(rdfs:label :OrderedCollection "Colección ordenada"@es)
AnnotationAssertion(rdfs:comment :OrderedCollection "An ordered collection is a collection where elements follow a sequential order."@en)
AnnotationAssertion(rdfs:label :OrderedCollection "Ordered collection"@en)
AnnotationAssertion(rdfs:comment :OrderedCollection "Una colección ordenada es una colección donde los elementos siguen un orden secuencial."@es)
SubClassOf(:OrderedCollection :Collection)
SubClassOf(:OrderedItem :Item)
SubClassOf(:OrderedItem DataExactCardinality(1 :hasIndex))
AnnotationAssertion(rdfs:label :Sequence "Secuencia"@es)
AnnotationAssertion(rdfs:comment :Sequence "Una secuencia es una colección homogenea, sin unicidad, ordenada y de cardinalidad variable."@es)
AnnotationAssertion(rdfs:label :Sequence "Sequence"@en)
AnnotationAssertion(rdfs:comment :Sequence "A sequence is an homogeneous, without uniqueness, ordered and with variable cardinality collection."@en)
SubClassOf(:Sequence :List)
SubClassOf(:Sequence :Multiset)
AnnotationAssertion(rdfs:comment :Set "A set is an homogeneous, with uniqueness, non ordered and with variable cardinality collection."@en)
AnnotationAssertion(rdfs:label :Set "Conjunto"@es)
AnnotationAssertion(rdfs:comment :Set "Un conjunto es una colección homogénea, con unicidad, no ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:label :Set "Set"@en)
SubClassOf(:Set :Heteroset)
SubClassOf(:Set :Multiset)
AnnotationAssertion(rdfs:comment :Tuple "A tuple is an heterogeneous, without uniqueness, ordered and with fixed cardinality collection."@en)
AnnotationAssertion(rdfs:label :Tuple "Tuple"@en)
AnnotationAssertion(rdfs:comment :Tuple "Una tupla es una colección heterogénea, sin unicidad, ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:label :Tuple "Tupla"@es)
SubClassOf(:Tuple :Box)
SubClassOf(:Tuple :List)
AnnotationAssertion(rdfs:comment :UniquenessCollection "Una colección con unicidad es una colección donde cada elemento aparece a lo sumo una vez, es decir, donde no se permiten las repeticiones de elementos."@es)
AnnotationAssertion(rdfs:label :UniquenessCollection "Colección con unicidad"@es)
AnnotationAssertion(rdfs:label :UniquenessCollection "Uniqueness collection"@en)
AnnotationAssertion(rdfs:comment :UniquenessCollection "An uniqueness collection is a collection where each element appears at most one time, that is, element repetitions are not allowed."@en)
SubClassOf(:UniquenessCollection :Collection)
AnnotationAssertion(rdfs:label :Vector "Vector"@es)
AnnotationAssertion(rdfs:comment :Vector "A vector is an homogeneous, without uniqueness, ordered and with fixed cardinality collection."@en)
AnnotationAssertion(rdfs:comment :Vector "Un vector es una colección homogénea, sin unicidad, ordenada y de cardinalidad fija."@es)
AnnotationAssertion(rdfs:label :Vector "Vector"@en)
SubClassOf(:Vector :Multicombination)
SubClassOf(:Vector :Sequence)
SubClassOf(:Vector :Tuple)
SubObjectPropertyOf(:hasContent owl:topObjectProperty)
InverseObjectProperties(:hasElement :isElementOf)
AsymmetricObjectProperty(:hasElement)
ObjectPropertyDomain(:hasElement :Collection)
SubObjectPropertyOf(:hasFirstItem :hasOrderedItem)
FunctionalObjectProperty(:hasFirstItem)
ObjectPropertyRange(:hasFirstItem ObjectIntersectionOf(:OrderedItem ObjectExactCardinality(0 :hasPreviousItem) DataHasValue(:hasIndex "1"^^xsd:positiveInteger)))
SubObjectPropertyOf(:hasLastItem :hasOrderedItem)
FunctionalObjectProperty(:hasLastItem)
ObjectPropertyRange(:hasLastItem ObjectIntersectionOf(ObjectExactCardinality(0 :hasNextItem) :OrderedItem))
SubObjectPropertyOf(:hasNextItem :isFollowedBy)
InverseObjectProperties(:hasNextItem :hasPreviousItem)
FunctionalObjectProperty(:hasNextItem)
InverseFunctionalObjectProperty(:hasNextItem)
AsymmetricObjectProperty(:hasNextItem)
IrreflexiveObjectProperty(:hasNextItem)
ObjectPropertyDomain(:hasNextItem :OrderedItem)
ObjectPropertyRange(:hasNextItem :OrderedItem)
SubObjectPropertyOf(:hasOrderedItem :hasItem)
ObjectPropertyDomain(:hasOrderedItem :OrderedCollection)
ObjectPropertyRange(:hasOrderedItem :OrderedItem)
SubObjectPropertyOf(:hasPreviousItem :isPrecededBy)
FunctionalObjectProperty(:hasPreviousItem)
InverseFunctionalObjectProperty(:hasPreviousItem)
AsymmetricObjectProperty(:hasPreviousItem)
IrreflexiveObjectProperty(:hasPreviousItem)
ObjectPropertyDomain(:hasPreviousItem :OrderedItem)
ObjectPropertyRange(:hasPreviousItem :OrderedItem)
AsymmetricObjectProperty(:isElementOf)
ObjectPropertyRange(:isElementOf :Collection)
AsymmetricObjectProperty(:isFollowedBy)
TransitiveObjectProperty(:isFollowedBy)
IrreflexiveObjectProperty(:isFollowedBy)
AsymmetricObjectProperty(:isPrecededBy)
TransitiveObjectProperty(:isPrecededBy)
IrreflexiveObjectProperty(:isPrecededBy)
FunctionalDataProperty(:hasCardinality)
DataPropertyDomain(:hasCardinality :Collection)
DataPropertyRange(:hasCardinality xsd:nonNegativeInteger)
FunctionalDataProperty(:hasIndex)
DataPropertyDomain(:hasIndex :OrderedItem)
DataPropertyRange(:hasIndex xsd:positiveInteger)
SubObjectPropertyOf(ObjectPropertyChain(:hasItem :hasContent) :hasElement)
SubObjectPropertyOf(ObjectPropertyChain(:hasOrderedItem :hasNextItem) :hasOrderedItem)
)